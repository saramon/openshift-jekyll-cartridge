#!/bin/bash -eu

source $OPENSHIFT_CARTRIDGE_SDK_BASH
JEKYLL_PID_FILE=${OPENSHIFT_HOMEDIR}/app-root/runtime/jekyll.pid

cartridge_type="jekyll"


# Check if the wildfly process is running
function isrunning() {

    # Check for running app
	pid=$(ps -ef | grep "[j]ekyll serve" | awk '{print $2}')
	if [ "$pid" != "" ]; then
		return 0
	else
		return 1
	fi
}

# Check if the server http port is up
function ishttpup() {
    let count=0
    while [ ${count} -lt 64 ]
    do
        if echo 2> /dev/null > "/dev/tcp/${OPENSHIFT_JEKYLL_IP}/${OPENSHIFT_JEKYLL_HTTP_PORT}"; then
            echo "Found ${OPENSHIFT_JEKYLL_IP}:${OPENSHIFT_JEKYLL_HTTP_PORT} listening port"
            return 0
        fi
 
        let count=${count}+1

        sleep 2
    done

    return 1
}



function start() {
  echo "Starting $cartridge_type cart"

   #Check for running app
  if isrunning; then
      echo "Application is already running"
  else
      env_dir=$OPENSHIFT_JEKYLL_DIR/env
      dirname $(scl enable ruby193 "which ruby") > $env_dir/OPENSHIFT_RUBY_PATH_ELEMENT
      ld_path=$(LD_LIBRARY_PATH="" scl enable ruby193 "printenv LD_LIBRARY_PATH")
      set_env_var 'OPENSHIFT_RUBY_LD_LIBRARY_PATH_ELEMENT' $ld_path $env_dir
	  export BUNDLE_GEMFILE=${OPENSHIFT_REPO_DIR}Gemfile

	  cd $OPENSHIFT_REPO_DIR
	  echo "Executing bundle install"
	  bundle install
	  echo "Starting Jekyll server"
	  bundle exec "jekyll serve --port ${OPENSHIFT_JEKYLL_HTTP_PORT} --host ${OPENSHIFT_JEKYLL_IP}" > ${OPENSHIFT_JEKYLL_DIR}/logs/server.log 2>&1 &

      if ! ishttpup; then
          echo "Timed out waiting for http listening port"
          exit 1
      fi
	  exit 0
  fi
}

function stop() {
  echo "Stopping $cartridge_type cart"

  if isrunning; then
      pid=$(ps -ef | grep "[j]ekyll serve" | awk '{print $2}')
      echo "Sending SIGTERM to jekyll:$pid ..." 1>&2
      kill $pid
  fi
}

function restart() {
    echo "Restarting $cartridge_type cart"

    stop

    start
}

function status() {
   if isrunning
   then
      client_result "Application is running"
   else
      client_result "Application is either stopped or inaccessible"
   fi
}

function reload() {
    echo "Reloading $cartridge_type cart"
    restart
}

# Clean up any log files
function tidy() {
  client_message "Emptying log dir: $OPENSHIFT_JEKYLL_LOG_DIR"
  shopt -s dotglob
  rm -rf $OPENSHIFT_JEKYLL_LOG_DIR/*
}

case "$1" in
  start)           start ;;
  stop)            stop ;;
  restart)         restart ;;
  status)          status ;;
  reload)          reload ;;
  tidy)            tidy ;;
  *)               exit 0
esac

